local function map(mode, lhs, rhs, opts)
  local options = { noremap = true, silent = true }
  if opts then
    options = vim.tbl_extend('force', options, opts)
  end
  vim.api.nvim_set_keymap(mode, lhs, rhs, options)
end

vim.g.mapleader = ' '

vim.api.nvim_set_keymap("n", "<Leader>bb", ":split<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>bv", ":vsplit<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>bx", ":bd!<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>bd", ":%bd!<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>be", "<C-w>=<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>bn", ":sp new<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>bo", "<c-w>o<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>bh", "<c-w>H<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>bj", "<c-w>J<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>bk", "<c-w>K<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>bl", "<c-w>L<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>cj", ":Cheat js <CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>cs", ":Cheat <CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>db", ":lua require'dap'.toggle_breakpoint()<CR>", { })
vim.api.nvim_set_keymap("n", "<Leader>dd", ":lua require'dap'.continue()<CR>", { })
vim.api.nvim_set_keymap("n", "<Leader>do", ":lua require'dap'.step_over()<CR>", { })
vim.api.nvim_set_keymap("n", "<Leader>di", ":lua require'dap'.step_into()<CR>", { })
vim.api.nvim_set_keymap("n", "<Leader>ds", ":lua require'dap'.repl.open()<CR>", { })
vim.api.nvim_set_keymap("n", "<leader>ga", ":Gwrite<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "gb", "<C-^><CR>", { silent = true, })
vim.api.nvim_set_keymap("n", "<leader>gc", ":Git commit -m ", { noremap = true, })
vim.api.nvim_set_keymap("n", "gd", "<cmd>lua vim.lsp.buf.definition()<CR>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "gD", "<cmd>lua vim.lsp.buf.declaration()<CR>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "gh", "<cmd>CodeActionMenu<CR>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "gf", "<C-]><CR>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>gg", ":terminal git pull", { noremap = true, })
vim.api.nvim_set_keymap("n", "gi", "<cmd>lua vim.lsp.buf.implementation()<CR>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>gp", ":Git push<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "gr", "<cmd>lua vim.lsp.buf.references()<CR>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>gs", ":G<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>sr", ":%s/", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>j", ":VimwikiFollowLink<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>J", "J", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>k", ":VimwikiGoBackLink<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>K", "K", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>li", ":LspInfo<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>ms", ":SudaWrite<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>mw", ":w!<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>ma", ":w ", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>mc", ":wqa<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>md", ":call delete(expand('%'))<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>mg", ":MarksListGlobal<CR>", { noremap = true, })
--vim.api.nvim_set_keymap("n", "<Leader>ma", ":MarksListAll<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>mq", ":q<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>mx", ":q!<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>mr", ":Rename! ", { noremap = true, })
--vim.api.nvim_set_keymap("n", "<Leader>mm", ":MaximizerToggle!<CR>", { })
vim.api.nvim_set_keymap("n", "<Leader>mn", ":e %:h/", { })
vim.api.nvim_set_keymap("n", "<Leader>ms", ":MarksToggleSigns<CR>", { })
vim.api.nvim_set_keymap("n", "<Leader>nt", ":NERDTree<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>pi", ":PlugInstall<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>oa", ":e C:\\Users\\ELLE\\Desktop\\Shane\\projects\\dev_agency\\<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>ob", ":e C:\\Users\\ELLE\\Desktop\\Shane\\vs_code\\i_bet_you_wont\\src\\App.js<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>oe", ":e C:\\Users\\ELLE\\Desktop\\Shane\\projects\\elle_progress\\<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>oi", ":e C:\\Users\\TheNo\\AppData\\Local\\nvim\\init.vim<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>ok", ":e C:\\Users\\TheNo\\AppData\\Local\\nvim\\lua\\keymaps.lua<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>oc", ":e C:\\Users\\TheNo\\AppData\\Local\\nvim\\lua\\config.lua<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>oo", ":e C:\\Users\\TheNo\\AppData\\Local\\nvim\\lua\\options.lua<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>ot", ":e C:\\Users\\TheNo\\Desktop\\Shane\\projects\\curd_react\\frontend<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>or", ":e C:\\Users\\ELLE\\Desktop\\Shane\\projects\\rs_challenge_dev\\<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>op", ":e C:\\Users\\ELLE\\Desktop\\Shane\\projects\\persnicketi_agency\\<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>os", ":e C:\\Users\\ELLE\\AppData\\Local\\nvim\\friendly_snippets\\snippets\\javascript\\<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>ou", ":e C:\\Users\\ELLE\\AppData\\Local\\nvim\\snippets\\<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>pa", ":ASOn<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>pA", ":ASOff<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>pi", ":PlugInstall<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>ps", ":PlugStatus<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>qs", "<plug>(QuickScopeToggle)", { })
vim.api.nvim_set_keymap("x", "<leader>qs", "<plug>(QuickScopeToggle)", { })
vim.api.nvim_set_keymap("n", "<leader>ri", ":%s/X/\\=Incr()<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>rx", ":%s/XXX/", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>sb", ":ls<CR>:b<space>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>sl", ":luafile %<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>sm", ":marks<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>sv", ":source $MYVIMRC<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>tc", ":tabc<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>th", ":nohlsearch<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>to", ":tabo<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>tr", ":TroubleToggle<CR>", { })
vim.api.nvim_set_keymap("n", "<Leader>tt", ":ToggleTerm size=10 direction=horizontal<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>t1", ":1ToggleTerm size=10 direction=horizontal<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>t2", ":2ToggleTerm size=10<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>t3", ":3ToggleTerm size=10<CR> ", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>t4", ":4ToggleTerm size=10<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<Leader>t5", ":5ToggleTerm size=40<CR> ", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>uu", ":MundoToggle<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>wc", ":Calendar<CR>", { })
vim.api.nvim_set_keymap("n", "<leader>wd", "<Plug>VimwikiDeleteFile", { })
vim.api.nvim_set_keymap("n", "<leader>wg", "<Plug>VimwikiDiaryGenerateLinks", { })
vim.api.nvim_set_keymap("n", "<leader>wh", "<Plug>VimwikiDecrementListItem", { })
vim.api.nvim_set_keymap("n", "<leader>wl", "<Plug>VimwikiIncrementListItem", { })
vim.api.nvim_set_keymap("n", "<leader>wn", "<Plug>VimwikiMakeDiaryNote", { })
vim.api.nvim_set_keymap("n", "<leader>wt", "<Plug>VimwikiMakeTomorrowDiaryNote", { })
vim.api.nvim_set_keymap("n", "<leader>ww", ":VimwikiIndex<CR>", { })
vim.api.nvim_set_keymap("n", "<leader>wy", "<Plug>VimwikiMakeYesterdayDiaryNote<CR>", { })
vim.api.nvim_set_keymap("n", "<leader>w,", "<Plug>VimwikiDiaryPrevDay", { })
vim.api.nvim_set_keymap("n", "<leader>w.", "<Plug>VimwikiDiaryNextDay", { })
vim.api.nvim_set_keymap("n", "<leader>zb", ":Buffers<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>zc", ":HopChar2<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>zf", ":Files ~<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>zg", ":BCommits<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>zh", ":History<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>zm", ":Maps<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>zt", ":BTags<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>zw", ":Windows<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>:", "@:", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>@", "@@", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>[", "[{", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>]", "]}", { noremap = true, })
vim.api.nvim_set_keymap("n", "<leader>/", "<Plug>AgRawSearch", { })
vim.api.nvim_set_keymap("n", "<leader>ia", "gg=G", { noremap = true, })

vim.api.nvim_set_keymap("n", "<A-,>", ":bprevious<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<A-.>", ":bnext<CR>", { noremap = true, })
--vim.api.nvim_set_keymap("n", "<A-k>", ":call vimspector#StepOut()<CR>", { })
--vim.api.nvim_set_keymap("n", "<A-j>", ":call vimspector#StepOver()<CR>", { })
vim.api.nvim_set_keymap("n", "<A-l>", ":call vimspector#StepInto()<CR>", { })
vim.api.nvim_set_keymap("n", "<A-h>", ":call vimspector#Continue()<CR>", { })

vim.api.nvim_set_keymap("n", "<A-S-j>", "<C-d>", { })
vim.api.nvim_set_keymap("n", "<A-S-k>", "<C-u>", { })

vim.api.nvim_set_keymap("n", "<c-a>", "<cmd>lua vim.lsp.buf.code_action()<CR>", { silent = true, noremap = true, })
--vim.api.nvim_set_keymap("n", "<c-d>", "<cmd>lua vim.lsp.buf.hover()<CR>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("i", "<C-E>", "luasnip#choice_active() ? '<Plug>luasnip-next-choice' : '<C-E>'", { silent = true, expr = true, })
vim.api.nvim_set_keymap("s", "<C-E>", "luasnip#choice_active() ? '<Plug>luasnip-next-choice' : '<C-E>'", { silent = true, expr = true, })
vim.api.nvim_set_keymap("n", "<C-h>", "<C-w>h", { noremap = true, })
vim.api.nvim_set_keymap("i", "<C-h>", "<C-w>h", { noremap = true, })
vim.api.nvim_set_keymap("n", "<C-j>", "<C-w>j", { noremap = true, })
vim.api.nvim_set_keymap("i", "<C-j>", "<C-w>j", { noremap = true, })
vim.api.nvim_set_keymap("n", "<C-k>", "<C-w>k", { noremap = true, })
vim.api.nvim_set_keymap("i", "<C-k>", "<C-w>k", { noremap = true, })
vim.api.nvim_set_keymap("n", "<C-l>", "<C-w>l", { noremap = true, })
vim.api.nvim_set_keymap("i", "<C-l>", "<C-w>l", { noremap = true, })
vim.api.nvim_set_keymap("n", "<C-p>", ":terminal {start C:\\Users\\ELLE\\Desktop\\Shane\\music\\elle_1.ly}", { })
vim.api.nvim_set_keymap("n", "<c-x>", "<cmd>lua vim.diagnostic.goto_next()<CR>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "<c-z>", "<cmd>lua vim.diagnostic.goto_prev()<CR>", { silent = true, noremap = true, })


vim.api.nvim_set_keymap("s", "<Tab>", "<cmd>lua require('luasnip').jump(1)<Cr>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("i", "<Tab>", "luasnip#expand_or_jumpable() ? '<Plug>luasnip-expand-or-jump' : '<Tab>' ", { silent = true, expr = true, })

vim.api.nvim_set_keymap("i", "<S-Tab>", "<cmd>lua require'luasnip'.jump(-1)<Cr>", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("s", "<S-Tab>", "<cmd>lua require('luasnip').jump(-1)<Cr>", { silent = true, noremap = true, })

vim.api.nvim_set_keymap("n", "<C-S-h>", ":vertical resize -5<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<C-S-l>", ":vertical resize +5<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<C-S-j>", ":resize -5<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<C-S-k>", ":resize +5<CR>", { noremap = true, })


vim.api.nvim_set_keymap("n", "<up>", "<C-w><up>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<down>", "<C-w><down>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<left>", "<C-w><left>", { noremap = true, })
vim.api.nvim_set_keymap("n", "<right>", "<C-w><right>", { noremap = true, })

vim.api.nvim_set_keymap("n", "cm", ":ConvertMapToLua<CR>", { noremap = true, })
vim.api.nvim_set_keymap("n", "D", "\\\"_d", { })
vim.api.nvim_set_keymap("n", "g*", "g*zz", { noremap = true, })
vim.api.nvim_set_keymap("n", "g#", "g#zz", { noremap = true, })
vim.api.nvim_set_keymap("i", "jk", "<esc>", { noremap = true, })
vim.api.nvim_set_keymap("v", "J", "5j", { noremap = true, })
vim.api.nvim_set_keymap("n", "J", "5j", { noremap = true, })
vim.api.nvim_set_keymap("v", "K", "5k", { noremap = true, })
vim.api.nvim_set_keymap("n", "K", "5k", { noremap = true, })
vim.api.nvim_set_keymap("n", "n", "nzz", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "N", "Nzz", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "Y", "y$", { noremap = true, })

vim.api.nvim_set_keymap("n", "*", "*zz", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("n", "#", "#zz", { silent = true, noremap = true, })
vim.api.nvim_set_keymap("", "<F5>", ":setlocal spell!<CR>", { })

vim.keymap.set(
  'n',
  '<leader>cc', -- e.g. '<leader>c`
  function()
    vim.cmd('term curl ' .. vim.fn.getreg('+'):gsub('\n', ''))
  end,
  {}
)
